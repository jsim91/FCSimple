% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcs_reduce_dimensions.R
\name{fcs_reduce_dimensions}
\alias{fcs_reduce_dimensions}
\title{2D Dimensionality Reduction for Flow Cytometry Data}
\usage{
fcs_reduce_dimensions(
  fcs_join_obj,
  use_rep = "data",
  algorithm = c("tsne", "umap"),
  language = c("R", "Python"),
  umap_nn = 30,
  umap_min_dist = 0.1,
  tsne_perplexity = 30,
  nthread = ceiling(parallel::detectCores()/2)
)
}
\arguments{
\item{fcs_join_obj}{A list returned by FCSimple::fcs_join() (and optionally
augmented by FCSimple::fcs_batch_correction or FCSimple::fcs_pca). Must
contain at least one of:
\itemize{
\item \code{fcs_join_obj$data} (raw or transformed expression matrix), or
\item \code{fcs_join_obj$pca$pca_data} (when \code{use_rep = "pca"}), or
\item \code{fcs_join_obj$batch_correction$data} (automatically used if present).
}}

\item{use_rep}{Character; which representation to reduce.
\itemize{
\item \code{"data"} (default): use \code{fcs_join_obj$data} or batch‐corrected data if present.
\item \code{"pca"}: use \code{fcs_join_obj$pca$pca_data} (requires prior call to FCSimple::fcs_pca).
}}

\item{algorithm}{Character; which algorithm to run.
\itemize{
\item \code{"tsne"}: t‐distributed stochastic neighbor embedding.
\item \code{"umap"}: uniform manifold approximation and projection.
Default is \code{c("tsne","umap")} (selects first).
}}

\item{language}{Character; runtime environment for the chosen algorithm.
\itemize{
\item \code{"R"} (default): calls uwot::umap or Rtsne::Rtsne.
\item \code{"Python"}: writes a CSV, invokes the package’s Python script, and reads back results.
}}

\item{umap_nn}{Numeric; number of neighbors for UMAP (default 30).}

\item{umap_min_dist}{Numeric; minimum distance parameter for UMAP (default 0.1).}

\item{tsne_perplexity}{Numeric; perplexity parameter for t‐SNE (default 30).}

\item{nthread}{Integer; number of CPU threads for Rtsne (default \code{ceiling(parallel::detectCores()/2)}).}
}
\value{
The input \code{fcs_join_obj}, with a new element named by the
lower‐case \code{algorithm}:
\itemize{
\item \verb{$<algorithm>$coordinates}: numeric matrix (cells × 2).
\item \verb{$<algorithm>$settings}: list of parameters passed.
\item \code{object_history} updated with the reduction event.
}
}
\description{
Performs UMAP or t‐SNE on a flow cytometry analysis object. By default,
reduces the (batch‐corrected) expression matrix to two dimensions
using either the R implementation (uwot or Rtsne) or an external
Python script. The result is stored in your object under “umap” or “tsne”.
}
\details{
\enumerate{
\item If \code{fcs_join_obj$batch_correction$data} exists, that matrix is used
regardless of \code{use_rep}. Otherwise, \code{use_rep} selects raw data or PCA.
\item For UMAP:
\itemize{
\item R: calls \code{uwot::umap()} with a fixed seed, \code{umap_nn}, and \code{umap_min_dist}.
\item Python: writes data to \code{inst/python}, runs \code{run_umap.py}, cleans temp files.
}
\item For t‐SNE:
\itemize{
\item R: calls \code{Rtsne::Rtsne()} with \code{tsne_perplexity}, \code{nthread}, and fixed settings.
\item Python: similar CSV → script → import workflow via \code{run_tsne.py}.
}
\item The resulting 2‐column matrix is stored as
\code{fcs_join_obj$umap$coordinates} or \verb{$tsne$coordinates}, and the
parameters used are recorded under
\verb{fcs_join_obj$<algorithm>$settings}.
\item An entry is appended to \code{fcs_join_obj$object_history}:
\verb{<algorithm> on <use_rep>: <timestamp>}.
}
}
\examples{
\dontrun{
  # Basic UMAP on raw data
  joined <- FCSimple::fcs_join(files)
  out_umap <- FCSimple::fcs_reduce_dimensions(
    joined,
    algorithm = "umap",
    language  = "R"
  )

  # t-SNE using PCA coordinates and Python backend
  pca_obj <- FCSimple::fcs_pca(joined)
  out_tsne <- FCSimple::fcs_reduce_dimensions(
    pca_obj,
    use_rep    = "pca",
    algorithm  = "tsne",
    language   = "Python",
    tsne_perplexity = 50
  )
}

}
\seealso{
uwot::umap, Rtsne::Rtsne, FCSimple::fcs_pca, FCSimple::fcs_batch_correction
}
