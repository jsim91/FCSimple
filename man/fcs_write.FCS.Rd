% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcs_write_file.R
\name{fcs_write.FCS}
\alias{fcs_write.FCS}
\title{Export Flow Cytometry Data to an FCS File}
\usage{
fcs_write.FCS(
  fcs_join_obj,
  fcs_name = "fcs_out",
  data_format = c("raw", "transformed"),
  include_reductions = c("UMAP", "tSNE"),
  include_clusterings = c("leiden", "flowsom", "louvain", "phenograph", "git"),
  subset_rows = "all",
  outdir = getwd(),
  include_timestamp = TRUE
)
}
\arguments{
\item{fcs_join_obj}{A list returned by FCSimple::fcs_join(), optionally augmented by
FCSimple::fcs_batch_correction(), FCSimple::fcs_reduce_dimensions(), and
FCSimple::fcs_cluster(). Must contain at least one of:
\itemize{
\item \code{data}: transformed expression matrix (events × channels)
\item \code{raw}: raw (reverse‐transformed) matrix, if \code{data_format = "raw"} is used
}}

\item{fcs_name}{Character string (without “.fcs”) to use as the base filename for the output
FCS file (default \code{"fcs_out"}).}

\item{data_format}{Character; which data slot to write. Options are:
\itemize{
\item \code{"raw"}: write \code{fcs_join_obj$raw} if present, otherwise falls back to
\code{fcs_join_obj$data} (default)
\item \code{"transformed"}: write \code{fcs_join_obj$data}
}}

\item{include_reductions}{Character vector naming reduction embeddings to include as extra columns.
Each element (e.g. \code{"UMAP"} or \code{"tSNE"}) must match a named list element
in \code{fcs_join_obj} containing \verb{$coordinates}. Defaults to \code{c("UMAP","tSNE")}.}

\item{include_clusterings}{Character vector of clustering results to include. Each element (e.g.
\code{"leiden"}, \code{"flowsom"}, \code{"louvain"}, \code{"phenograph"}, \code{"git"}) must match
a list element in \code{fcs_join_obj} with \code{clusters}. Defaults to all five.
Cluster columns are named \verb{<algorithm>_cluster}.}

\item{subset_rows}{Either \code{"all"} (default) to write every event, or an integer vector of
row indices to subset before writing.}

\item{outdir}{Directory path where the .fcs file will be saved (default \code{getwd()}).}

\item{include_timestamp}{Logical; if \code{TRUE} (default), appends \verb{_YYYY-MM-DD_HHMMSS} to the filename.}
}
\value{
Invisibly returns \code{NULL}. The main effect is the creation of an .fcs file
at \verb{file.path(outdir, paste0(fcs_name, [optional _timestamp], ".fcs"))}.
}
\description{
Takes an FCSimple analysis object and writes its expression data (raw or
transformed), with optional dimensionality‐reduction coordinates and
clustering labels, into a new .fcs file. Useful for exporting combined
data back into flowCore‐compatible format for downstream tools.
}
\details{
The function proceeds as follows:
\enumerate{
\item Selects the expression matrix according to \code{data_format}.
\item Gathers any requested embeddings by extracting
\code{fcs_join_obj[[ tolower(reduction) ]][["coordinates"]]}.
\item Gathers any requested cluster assignments by extracting
\code{fcs_join_obj[[ tolower(algorithm) ]][["clusters"]]}.
\item Warns about any missing slots and omits them.
\item Column‐binds the data, embeddings, and clustering vectors into a single
numeric matrix.
\item Constructs a new \code{flowFrame} and, if \code{subset_rows != "all"}, subsets
to those rows.
\item Writes the \code{flowFrame} to disk via \code{flowCore::write.FCS()}.
}
}
\examples{
\dontrun{
  # Export transformed data only
  joined <- FCSimple::fcs_join(file_paths)
  FCSimple::fcs_write.FCS(
    joined,
    fcs_name = "my_analysis",
    data_format = "transformed",
    include_reductions = c("UMAP"),
    include_clusterings = c("leiden"),
    outdir = "~/results"
  )

  # Export raw values + all reductions and clusters, subset first 1000 cells
  FCSimple::fcs_write.FCS(
    joined,
    data_format = "raw",
    subset_rows = 1:1000,
    include_timestamp = FALSE
  )
}

}
\seealso{
flowCore::write.FCS, FCSimple::fcs_join,
FCSimple::fcs_reduce_dimensions, FCSimple::fcs_cluster
}
