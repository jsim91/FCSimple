% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcs_cluster_abundance.R
\name{fcs_calculate_abundance}
\alias{fcs_calculate_abundance}
\title{Calculate Cluster Abundance Across Samples}
\usage{
fcs_calculate_abundance(
  fcs_join_obj,
  report_algorithm = c("leiden", "flowsom", "louvain", "phenograph", "git"),
  report_as = c("frequency", "fraction", "count"),
  return_abundance = FALSE
)
}
\arguments{
\item{fcs_join_obj}{A list returned by FCSimple::fcs_join() and FCSimple::fcs_cluster(),
containing at minimum:
- `source`: a character vector of original sample identifiers
- `<algorithm>`: a list whose first element is a vector of cluster IDs
- `object_history`: an optional history log}

\item{report_algorithm}{Character; name of the clustering result to summarize. One of
`"leiden"`, `"flowsom"`, `"louvain"`, `"phenograph"`, or `"git"`.}

\item{report_as}{Character; type of abundance metric. One of
`"frequency"` (0–100), `"fraction"` (0–1), or `"count"` (raw cell counts).
Defaults to `"frequency"`.}

\item{return_abundance}{Logical; if `TRUE`, the function returns the abundance matrix directly
and does not modify `fcs_join_obj`. Defaults to `FALSE`.}
}
\value{
If `return_abundance = TRUE`, a numeric matrix (samples × clusters)
  containing counts, frequencies, or fractions. Otherwise, the input
  `fcs_join_obj`, augmented with:
  - `<algorithm>$abundance`: a numeric matrix (samples × clusters)
  - updated `object_history`
}
\description{
Computes per‐sample cluster abundances for a previously clustered flow
  cytometry object. Stores a matrix of raw cell counts, frequencies (0–100),
  or fractions (0–1) under the chosen algorithm’s `abundance` element, and
  appends a timestamped entry to `object_history`.
}
\details{
The function will:
  1. Validate that the specified algorithm and `source` exist.
  2. If `report_as = "count"`, tabulate raw cell counts per cluster, per sample.
     Otherwise, compute proportions of cells in each cluster per sample.
  3. If `report_as = "frequency"`, multiply proportions by 100.
  4. If `return_abundance = TRUE`, return the abundance matrix.
     Otherwise, store it in
     `fcs_join_obj[[report_algorithm]][["abundance"]]`.
  5. If not returning directly, append a timestamped note to
     `object_history`.
}
\examples{
\dontrun{
  joined <- FCSimple::fcs_join(list(ff1, ff2))
  clustered <- FCSimple::fcs_cluster(joined, algorithm = "leiden")

  # Get percentage abundance for Leiden clusters
  out1 <- FCSimple::fcs_calculate_abundance(
    clustered,
    report_algorithm = "leiden",
    report_as = "frequency"
  )

  # Get raw cell counts for Leiden clusters, return matrix directly
  counts_mat <- FCSimple::fcs_calculate_abundance(
    clustered,
    report_algorithm = "leiden",
    report_as = "count",
    return_abundance = TRUE
  )
}

}
\seealso{
FCSimple::fcs_cluster, FCSimple::fcs_report_abundance
}
